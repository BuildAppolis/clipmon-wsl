#!/bin/bash

# Simple Clipboard Monitor Launcher
# Just start the monitor with a clean interface

# Colors
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
CYAN='\033[0;36m'
MAGENTA='\033[0;35m'
DIM='\033[2m'
BOLD='\033[1m'
NC='\033[0m'

# Parse command first
COMMAND="${1:-start}"
PROJECT_DIR="$(pwd)"
CAPTURES_DIR="$PROJECT_DIR/.claude/captures"

# Handle commands
case "$COMMAND" in
    start|monitor)
        # Start with clean UI
        clear
        echo -e "${CYAN}╔══════════════════════════════════════════════════════════════╗${NC}"
        echo -e "${CYAN}║${NC}          ${BOLD}📋 CLIPBOARD MONITOR${NC} ${GREEN}[STARTING]${NC}                  ${CYAN}║${NC}"
        echo -e "${CYAN}╚══════════════════════════════════════════════════════════════╝${NC}"
        echo ""
        echo -e "${DIM}Project:${NC} ${YELLOW}$(basename $PROJECT_DIR)${NC}"
        echo -e "${DIM}Saving to:${NC} ${CYAN}.claude/captures/${NC}"
        echo ""
        echo -e "${GREEN}✓${NC} Monitoring clipboard for images and GIFs"
        echo -e "${DIM}Press Ctrl+C to stop${NC}"
        echo ""
        
        # Trap Ctrl+C to cleanup properly
        cleanup() {
            echo -e "\n${YELLOW}Stopping monitor...${NC}"
            kill $MONITOR_PID 2>/dev/null
            echo -e "${GREEN}✓ Monitor stopped${NC}"
            exit 0
        }
        trap cleanup INT TERM
        
        # Start the enhanced monitor in background
        powershell.exe -ExecutionPolicy Bypass -File "$(wslpath -w /home/cory-ubuntu/.claude/tools/clipboard-monitor-enhanced.ps1)" \
            -ProjectPath "$(wslpath -w "$PROJECT_DIR")" &
        MONITOR_PID=$!
        
        # Wait for the process
        wait $MONITOR_PID
        ;;
        
    refs|list|show)
        # Show references
        CAPTURES_DIR="$CAPTURES_DIR" /home/cory-ubuntu/.claude/tools/screenshot-refs
        ;;
        
    clean)
        # Clean old captures
        echo -e "${YELLOW}Cleaning old captures...${NC}"
        find "$CAPTURES_DIR" -name "img_*" -type f -mtime +1 -delete 2>/dev/null
        find "$CAPTURES_DIR" -name "text_*" -type f -delete 2>/dev/null
        echo -e "${GREEN}✓ Cleaned old captures${NC}"
        ;;
        
    bg|background)
        # Start in background
        /home/cory-ubuntu/.claude/tools/clipmon-bg "$PROJECT_DIR" start
        ;;
        
    stop)
        # Stop background monitor
        /home/cory-ubuntu/.claude/tools/clipmon-bg stop
        ;;
        
    status)
        # Check status
        /home/cory-ubuntu/.claude/tools/clipmon-bg status
        ;;
        
    help|--help|-h)
        echo -e "${CYAN}${BOLD}📋 Clipboard Monitor${NC}"
        echo ""
        echo -e "${GREEN}Usage:${NC}"
        echo -e "  clipmon         - Start monitoring (terminal)"
        echo -e "  clipmon bg      - Start in background"
        echo -e "  clipmon stop    - Stop background monitor"
        echo -e "  clipmon status  - Check if running"
        echo -e "  clipmon refs    - Show numbered references"
        echo -e "  clipmon clean   - Clean old captures"
        echo -e "  clipmon help    - Show this help"
        echo ""
        echo -e "${YELLOW}Natural Language:${NC}"
        echo -e "  'lls'           - Latest screenshot"
        echo -e "  'look at #3'    - Specific capture"
        echo -e "  '#1 and #2'     - Multiple captures"
        ;;
        
    *)
        # Default to start
        exec "$0" start
        ;;
esac