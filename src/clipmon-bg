#!/bin/bash

# Clipboard Monitor - Background Mode
# Runs silently and saves a PID file for easy stopping

# Initialize with current directory as default
PROJECT_DIR="$(pwd)"
PID_FILE="$HOME/.claude/clipmon.pid"

# Colors
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
RED='\033[0;31m'
CYAN='\033[0;36m'
NC='\033[0m'

# Function to start monitor
start_monitor() {
    # Check if already running
    if [ -f "$PID_FILE" ]; then
        OLD_PID=$(cat "$PID_FILE")
        if ps -p "$OLD_PID" > /dev/null 2>&1; then
            echo -e "${YELLOW}Monitor already running (PID: $OLD_PID)${NC}"
            echo -e "Use 'clipmon-bg stop' to stop it"
            exit 1
        fi
    fi
    
    echo -e "${CYAN}Starting Clipboard Monitor in background...${NC}"
    echo -e "Project: ${YELLOW}$PROJECT_DIR${NC}"
    
    # Create captures directory
    CAPTURES_DIR="$PROJECT_DIR/.claude/captures"
    mkdir -p "$CAPTURES_DIR"
    
    # Start Python monitor in background from the same directory
    SCRIPT_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"
    nohup python3 "$SCRIPT_DIR/clipmon-monitor.py" --project "$PROJECT_DIR" > /dev/null 2>&1 &
    
    PID=$!
    echo $PID > "$PID_FILE"
    
    echo -e "${GREEN}âœ“ Monitor started (PID: $PID)${NC}"
    echo -e "${GREEN}âœ“ Saving to: $CAPTURES_DIR${NC}"
    echo ""
    echo -e "Commands:"
    echo -e "  ${CYAN}clipmon-bg stop${NC}  - Stop monitoring"
    echo -e "  ${CYAN}clipmon-bg status${NC} - Check status"
    echo -e "  ${CYAN}clipmon refs${NC}      - View captures"
}

# Function to stop monitor
stop_monitor() {
    if [ ! -f "$PID_FILE" ]; then
        echo -e "${YELLOW}No monitor running${NC}"
        exit 0
    fi
    
    PID=$(cat "$PID_FILE")
    
    if ps -p "$PID" > /dev/null 2>&1; then
        kill "$PID" 2>/dev/null
        echo -e "${GREEN}âœ“ Monitor stopped (PID: $PID)${NC}"
    else
        echo -e "${YELLOW}Monitor not running (stale PID file)${NC}"
    fi
    
    rm -f "$PID_FILE"
}

# Function to check status
check_status() {
    if [ ! -f "$PID_FILE" ]; then
        echo -e "${RED}âš« Monitor not running${NC}"
        exit 1
    fi
    
    PID=$(cat "$PID_FILE")
    
    if ps -p "$PID" > /dev/null 2>&1; then
        echo -e "${GREEN}ðŸŸ¢ Monitor running (PID: $PID)${NC}"
        
        # Check captures in current directory
        CAPTURES_DIR="$(pwd)/.claude/captures"
        if [ -d "$CAPTURES_DIR" ]; then
            COUNT=$(ls -1 "$CAPTURES_DIR"/img_* 2>/dev/null | wc -l)
            echo -e "   Captures: ${CYAN}$COUNT files${NC}"
            echo -e "   Location: ${CYAN}$CAPTURES_DIR${NC}"
        fi
    else
        echo -e "${RED}âš« Monitor not running (stale PID)${NC}"
        rm -f "$PID_FILE"
        exit 1
    fi
}

# Parse arguments properly
if [ $# -eq 0 ]; then
    COMMAND="start"
elif [ $# -eq 1 ]; then
    # Single argument - check if it's a command or directory
    if [[ "$1" == "start" ]] || [[ "$1" == "stop" ]] || [[ "$1" == "status" ]] || [[ "$1" == "restart" ]]; then
        COMMAND="$1"
    else
        # Assume it's a directory
        PROJECT_DIR="$1"
        COMMAND="start"
    fi
elif [ $# -eq 2 ]; then
    # Two arguments - first is directory, second is command
    PROJECT_DIR="$1"
    COMMAND="$2"
fi

case "$COMMAND" in
    start)
        start_monitor
        ;;
    stop)
        stop_monitor
        ;;
    status)
        check_status
        ;;
    restart)
        stop_monitor
        sleep 1
        start_monitor
        ;;
    *)
        echo -e "${CYAN}Clipboard Monitor - Background Mode${NC}"
        echo ""
        echo "Usage:"
        echo "  clipmon-bg start         - Start monitoring (current dir)"
        echo "  clipmon-bg stop          - Stop monitoring"
        echo "  clipmon-bg status        - Check status"
        echo "  clipmon-bg restart       - Restart monitor"
        echo "  clipmon-bg [dir] start   - Start monitoring in specific dir"
        ;;
esac